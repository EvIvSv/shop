<?phpinclude_once('Controller/C_Base.php');//// Конттроллер страницы товара//class C_Pro extends C_Base{	private $pro = array();			// Массив описания товара	private $cat = array();			// Массив описания категории	private $all_cat = array();		// Все категории	private $new;	//	// Конструктор.	//		function __construct()	{		parent::__construct();	}		//	// Виртуальный обработчик запроса.	//	protected function OnInput()	{		parent::OnInput();        $this->all_cat = M_Category::Instance()->All();		$this->new = $_GET['new'];		if ($_GET['new'] != 1)		{			$t = '';			if ($_SESSION['admin'] == true)				$t = ' :: Редактировать';		// Если авторизован админ, изменяем заголовок			$this->pro = $this->product->Get($_GET['id']);			$this->title = $this->pro['pro_name'].$t;	            $this->cat = M_Category::Instance()->Get($this->pro['id_cat']);				}		else		{			$this->title = 'Добавление товара';		}		// Обработка формы добавления товара в корзину.		if (isset($_POST['bag']))		{			M_Bag::Instance()->Add($_GET['id']);			header("Location: index.php?str=Pro&id=".$_GET['id']);			die();		}		// Обработка формы выбора категории		if (isset($_POST['bcat']))		{			$this->cat = M_Category::Instance()->Get($_POST['id_cat']);						}		// Обработка формы добавления товара		if (isset($_POST['prodel']))		{			M_Product::Instance()->Delete($_GET['id']);				header("Location: index.php");			die();					}		if (isset($_POST['setpro']))		{				$this->cat = M_Category::Instance()->Get($_POST['id_cat']);					// чтение данных из формы и их подготовка			$this->pro['pro_name'] = trim($_POST['pro_name']);			$this->pro['id_cat'] = $this->cat['id_cat'];			//вставка картинки!!!!!!!!!			if (!isset($_GET['id']))			{				$blacklist = array(".php", ".phtml", ".php3", ".php4", ".html", ".htm");				foreach ($blacklist as $item)				  if(preg_match("/$item\$/i", $_FILES['somename']['name'])) die('1');				$type = $_FILES['somename']['type'];				$size = $_FILES['somename']['size'];				//if (($type != "image/jpg") && ($type != "image/jpeg")) die('2');				if ($size > 100024000) die('изображение должно быть меньше 1Mb');				$uploadfile = "image/".$_FILES['somename']['name'];				move_uploaded_file($_FILES['somename']['tmp_name'], $uploadfile);				$this->pro['img'] = 'image/'.$_FILES['somename']['name'];     			}			$this->pro['price'] = trim($_POST['price']);			$this->pro['text'] = trim($_POST['text']);			$this->pro['har1'] = trim($_POST['har1']);			$this->pro['har2'] = trim($_POST['har2']);			$this->pro['har3'] = trim($_POST['har3']);			$this->pro['har4'] = trim($_POST['har4']);			$this->pro['har5'] = trim($_POST['har5']);						// удачная отправка формы. редактирование или добавление продукта в зависимости от параметра new			if ($_GET['new'])			{				M_Product::Instance()->Add($this->pro['pro_name'], $this->cat['id_cat'], 								 $this->pro['img'], $this->pro['price'], $this->pro['text'], $this->pro['har1'], 								 $this->pro['har2'], $this->pro['har3'], $this->pro['har4'], $this->pro['har5']);			}				else				{						M_Product::Instance()->Edit($this->pro['id_pro'], $this->pro['pro_name'], $this->pro['id_cat'], 										 $this->pro['img'], $this->pro['price'], $this->pro['text'], $this->pro['har1'], 										 $this->pro['har2'], $this->pro['har3'], $this->pro['har4'], $this->pro['har5']);					}					}	}		//	// Виртуальный генератор HTML.	//		protected function OnOutput()	{	    $vars = array('all_cat' => $this->all_cat, 'pro' => $this->pro, 'cat' => $this->cat);		$a = '';		if ($_SESSION['admin'] == true)			$fileName = 'View/V_Pro/V_ProA.php';		else			switch ($_GET['view'])			{				case 'spec': 					$fileName = 'View/V_Pro/V_Pro'.$a.'Spec.php';					break;				case 'text': 					$fileName = 'View/V_Pro/V_Pro'.$a.'Text.php';					break;				default:					$fileName = 'View/V_Pro/V_Pro'.$a.'Text.php';					break;			}		$this->content = $this->Template($fileName, $vars);		parent::OnOutput();	}	}